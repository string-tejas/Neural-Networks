package com.tejas.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.tejas.model.DigitModel;
import com.tejas.neuralnetwork.Matrix;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;

public class DigitForm implements MyForm {
    private JPanel panelMain;
    private JPanel panelCanvasHolder;
    private JPanel panelResultsHolder;
    private JPanel panelCanvasControls;
    private JButton buttonClear;
    private SoftBrushCanvas canvas;

    private final DigitModel digitModel;

    public DigitForm() {
        digitModel = new DigitModel();
        canvas = new SoftBrushCanvas(digitModel, this);
        renderCanvas();
    }

    private void renderCanvas() {
        panelCanvasHolder.setLayout(new BorderLayout());

        panelCanvasHolder.removeAll();  // Remove any existing components
        panelCanvasHolder.add(canvas, BorderLayout.CENTER);  // Add canvas to the holder
        buttonClear.addActionListener(e -> {
            canvas.clearCanvas();
        });

        panelCanvasHolder.revalidate();
        panelCanvasHolder.repaint();
    }

    public void renderResults(Matrix act) {
        panelResultsHolder.setLayout(new BoxLayout(panelResultsHolder, BoxLayout.Y_AXIS));
        panelResultsHolder.removeAll();

        int maxIdx = 0;
        float max = -1.f;
        for (int i = 0; i < act.row; i++) {
            if (act.values[i][0] > max) {
                max = act.values[i][0];
                maxIdx = i;
            }

        }

        for (int i = 0; i < act.row; i++) {
            JLabel label = new JLabel(String.valueOf(i) + ": " + String.format("%.3f", act.values[i][0] * 100) + " %");  // Create a new label
            label.setBorder(new EmptyBorder(10, 20, 0, 0));  // Top and left padding

            label.setFont(new Font("Consolas", Font.PLAIN, 18));
            if (i == maxIdx) {
                label.setForeground(Color.decode("#429172"));
            }

            label.setAlignmentX(Component.LEFT_ALIGNMENT);
            panelResultsHolder.add(label);  // Add label to the panel
        }

        panelResultsHolder.revalidate();
        panelResultsHolder.repaint();
    }

    public JPanel getPanelMain() {
        return panelMain;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.setBackground(new Color(-12828863));
        panelResultsHolder = new JPanel();
        panelResultsHolder.setLayout(new BorderLayout(0, 0));
        panelResultsHolder.setBackground(new Color(-14803166));
        panelMain.add(panelResultsHolder, new GridConstraints(0, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, 1, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(180, -1), new Dimension(180, -1), null, 0, false));
        panelCanvasHolder = new JPanel();
        panelCanvasHolder.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(panelCanvasHolder, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panelCanvasControls = new JPanel();
        panelCanvasControls.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panelMain.add(panelCanvasControls, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, new Dimension(-1, 100), new Dimension(-1, 100), null, 0, false));
        buttonClear = new JButton();
        buttonClear.setText("Clear");
        panelCanvasControls.add(buttonClear);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

}
